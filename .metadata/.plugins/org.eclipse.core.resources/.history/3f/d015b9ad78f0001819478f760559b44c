package LinkedList;

import LinkedList.Partition.Node;

public class LoopDetection {
	static Node head;
	static class Node{
		int data;
		Node next;
		Node(int d){
			data = d;
			next = null;
		}
	}
	static int loopy(Node head) {
		  Node slow_p = head, fast_p = head; 
	        while (slow_p != null && fast_p != null && fast_p.next != null) { 
	            slow_p = slow_p.next; 
	            fast_p = fast_p.next.next; 
	            if (slow_p == fast_p) { 
	                System.out.println("Found loop"); 
	                return 1; 
	            } 
	        } 
	        return 0; 
	}
	void printList(Node head) {
		while(head != null ) {
			System.out.print(head.data + "-");
			head = head.next;
		}
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		LoopDetection list = new LoopDetection();
		list.head = new Node(1);
		list.head.next = new Node(2);
		Node mid = new Node(7);
		list.head.next.next = mid;
		list.head.next.next.next = new Node(5);
		list.head.next.next.next.next = mid;
		list.printList(list.head);
		//System.out.println(list.loopy(list.head));
		
		
	}

}
