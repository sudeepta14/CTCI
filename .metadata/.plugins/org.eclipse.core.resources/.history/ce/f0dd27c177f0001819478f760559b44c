package LinkedList;

public class LoopDetection {
	static Node head;
	static class Node{
		int data;
		Node next;
		Node(int d){
			data = d;
			next = null;
		}
	}
	static Node loopy(Node head) {
		Node slow = head;
		Node fast = head;
		
		while(fast!= null && fast.next!= null) {
			slow = slow.next;
			fast = fast.next.next;
			if(slow == fast) {
				break;
			}
		}
		
		if(fast == null || fast.next == null)
			return null;
		
		slow = head;
		while(slow != fast) {
			slow = slow.next;
			fast = fast.next;
		}
		return fast;
	}
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		LoopDetection list = new LoopDetection();
		list.head = new Node(1);
		list.head.next = new Node(2);
		list.head.next.next = new Node(3);
		list.head.next.next.next = new Node(5);
		list.head.next.next.next.next = new Node(2);
		System.out.println(list.loopy(list.head));
		
		
	}

}
